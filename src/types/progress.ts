// Define the progress types
export interface CardProgress {
  damage: number;
  attackSpeed: number;
  health: number;
  healthRegen: number;
  range: number;
  cash: number;
  coins: number;
  slowAura: number;
  criticalChance: number;
  enemyBalance: number;
  extraDefense: number;
  fortress: number;
  freeUpgrades: number;
  extraOrb: number;
  plasmaCannon: number;
  criticalCoin: number;
  waveSkip: number;
  introSprint: number;
  landMineStun: number;
  recoveryPackageChance: number;
  deathRay: number;
  energyNet: number;
  superTower: number;
  secondWind: number;
  demonMode: number;
  energyShield: number;
  waveAccelerator: number;
  berserker: number;
  ultimateCrit: number;
  nuke: number;
}

export interface UpgradeProgress {
  // Attack Upgrades
  damage: number;
  attackSpeed: number;
  criticalChance: number;
  criticalFactor: number;
  attackRange: number;
  damagePerMeter: number;
  multishotChance: number;
  multishotTargets: number;
  rapidFireChance: number;
  rapidFireDuration: number;
  bounceShotChance: number;
  bounceShotTargets: number;
  bounceShotRange: number;
  superCritChance: number;
  superCritMult: number;
  rendArmorChance: number;
  rendArmorMult: number;
  // Defense Upgrades
  health: number;
  healthRegen: number;
  defensePercentage: number;
  defenseAbsolute: number;
  thornDamage: number;
  lifesteal: number;
  knockbackChance: number;
  knockbackForce: number;
  orbSpeed: number;
  orbs: number;
  shockwaveSize: number;
  shockwaveFrequency: number;
  landMineChance: number;
  landMineDamage: number;
  landMineRadius: number;
  deathDefy: number;
  wallHealth: number;
  wallRebuild: number;
  // Utility Upgrades
  cashBonus: number;
  cashPerWave: number;
  coinsPerKillBonus: number;
  coinsPerWave: number;
  freeAttackUpgrade: number;
  freeDefenseUpgrade: number;
  freeUtilityUpgrade: number;
  interestPerWave: number;
  recoveryAmount: number;
  maxRecovery: number;
  packageChance: number;
  enemyAttackLevelSkip: number;
  enemyHealthLevelSkip: number;
}

export interface LabProgress {
  // Main Research
  gameSpeed: number;
  startingCash: number;
  workshopAttackDiscount: number;
  workshopDefenseDiscount: number;
  workshopUtilityDiscount: number;
  labsCoinDiscount: number;
  labsSpeed: number;
  buyMultiplier: number;
  moreRoundStats: number;
  targetPriority: number;
  cardPresets: number;
  workshopRespec: number;
  rerollDailyMissions: number;
  workshopEnhancement: number;
  battleConditionReduction: number;
  // Attack Research
  damage: number;
  attackSpeed: number;
  criticalFactor: number;
  range: number;
  damagePerMeter: number;
  superCritChance: number;
  superCritMult: number;
  maxRendArmorMultiplier: number;
  lightSpeedShots: number;
  // Defense Research
  health: number;
  healthRegen: number;
  defenseAbsolute: number;
  defensePercent: number;
  orbSpeed: number;
  landMindDamage: number;
  landMindDecay: number;
  shockwaveSize: number;
  orbBossHit: number;
  wallHealth: number;
  wallRebuild: number;
  wallRegen: number;
  wallThorn: number;
  wallInvincibility: number;
  wallFortification: number;
  garlicThorns: number;
  // Utility Research
  cashBonus: number;
  cashPerWave: number;
  coinsPerKillBonus: number;
  coinsPerWave: number;
  interest: number;
  maxInterest: number;
  packageAfterBoss: number;
  recoveryPackageAmount: number;
  recoveryPackageMax: number;
  recoveryPackageChance: number;
  enemyAttackLevelSkip: number;
  enemyHealthLevelSkip: number;
  // Ultimate Weapon Research
  missilesDespawnTime: number;
  missilesExplosion: number;
  missilesRadius: number;
  chronoFieldDuration: number;
  chronoFieldDamageReduction: number;
  chronoFieldReductionPercent: number;
  swampRadius: number;
  swampStun: number;
  swampStunChance: number;
  swampStunTime: number;
  goldenTowerBonus: number;
  goldenTowerDuration: number;
  chainLightningShock: number;
  shockChance: number;
  shockMultiplier: number;
  deathWaveHealth: number;
  deathWaveCoinBonus: number;
  innerMineBlastRadius: number;
  innerMineRotationSpeed: number;
  chronoFieldRange: number;
  missileAmplifier: number;
  missileBarrage: number;
  missileBarrageQuantity: number;
  innerMineStun: number;
  blackHoleDamage: number;
  extraBlackHole: number;
  blackHoleCoinsBonus: number;
  spotlightCoinBonus: number;
  spotlightMissiles: number;
  blackHoleDisableRangedEnemies: number;
  rechargeMissileBarrage: number;
  swampRendBasicEnemies: number;
  swampRendAdditionalEnemies: number;
  chainThunder: number;
  lightningAmplifier: number;
  deathWaveDamageAmplifier: number;
  deathWaveCellBonus: number;
  deathWaveArmorStripping: number;
  innerLandMineChronoJump: number;
  // Card Research
  secondWindBlast: number;
  doubleDeathRay: number;
  extraOrbAdjuster: number;
  extraExtraOrbs: number;
  energyShieldExtraHit: number;
  superTowerBonus: number;
  rechargeSecondWind: number;
  rechargeDemonMode: number;
  rechargeNuke: number;
  damageMastery: number;
  attackSpeedMastery: number;
  healthMastery: number;
  healthRegenMastery: number;
  rangeMastery: number;
  cashMastery: number;
  coinsMastery: number;
  slowAuraMastery: number;
  criticalChanceMastery: number;
  enemyBalanceMastery: number;
  extraDefenseMastery: number;
  fortressMastery: number;
  freeUpgradesMastery: number;
  extraOrbMastery: number;
  plasmaCannonMastery: number;
  criticalCoinMastery: number;
  waveSkipMastery: number;
  introSprintMastery: number;
  landMineStunMastery: number;
  recoveryPackageChanceMastery: number;
  deathRayMastery: number;
  energyNetMastery: number;
  superTowerMastery: number;
  secondWindMastery: number;
  demonModeMastery: number;
  energyShieldMastery: number;
  waveAcceleratorMastery: number;
  berserkerMastery: number;
  ultimateCritMastery: number;
  nukeMastery: number;
  // Perk Research
  unlockPerks: number;
  wavesRequired: number;
  autoPickPerks: number;
  standardPerksBonus: number;
  perkOptionQuantity: number;
  firstPerkChoice: number;
  banPerks: number;
  improveTradeOffPerks: number;
  autoPickRanking: number;
  // Bot Research
  flameBotCooldown: number;
  thunderBotCooldown: number;
  goldenBotCooldown: number;
  amplifyBotCooldown: number;
  flameBotBurnStack: number;
  thunderBotLingerTime: number;
  goldenBotDuration: number;
  amplifyBotDuration: number;
  // Enemies Research
  commonEnemyHealth: number;
  commonEnemyAttack: number;
  fastEnemyHealth: number;
  fastEnemyAttack: number;
  fastEnemySpeed: number;
} 